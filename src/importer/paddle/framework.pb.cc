// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: framework.proto

#include "framework.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_framework_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OpDesc_Attr;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OpDesc_Var;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OpProto_Attr;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OpProto_Var;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VarType_TensorDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VarType_Tuple;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VarDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VarType_LoDTensorArrayDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VarType_LoDTensorDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VarType_ReaderDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BlockDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_OpDesc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_framework_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_VarType;
}  // namespace protobuf_framework_2eproto
namespace paddle {
namespace framework {
namespace proto {
class VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version>
      _instance;
} _Version_default_instance_;
class OpDesc_AttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpDesc_Attr>
      _instance;
} _OpDesc_Attr_default_instance_;
class OpDesc_VarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpDesc_Var>
      _instance;
} _OpDesc_Var_default_instance_;
class OpDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpDesc>
      _instance;
} _OpDesc_default_instance_;
class OpProto_VarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpProto_Var>
      _instance;
} _OpProto_Var_default_instance_;
class OpProto_AttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpProto_Attr>
      _instance;
} _OpProto_Attr_default_instance_;
class OpProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpProto>
      _instance;
} _OpProto_default_instance_;
class VarType_TensorDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_TensorDesc>
      _instance;
} _VarType_TensorDesc_default_instance_;
class VarType_LoDTensorDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_LoDTensorDesc>
      _instance;
} _VarType_LoDTensorDesc_default_instance_;
class VarType_LoDTensorArrayDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_LoDTensorArrayDesc>
      _instance;
} _VarType_LoDTensorArrayDesc_default_instance_;
class VarType_ReaderDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_ReaderDesc>
      _instance;
} _VarType_ReaderDesc_default_instance_;
class VarType_TupleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_Tuple>
      _instance;
} _VarType_Tuple_default_instance_;
class VarTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType>
      _instance;
} _VarType_default_instance_;
class VarDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarDesc>
      _instance;
} _VarDesc_default_instance_;
class BlockDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockDesc>
      _instance;
} _BlockDesc_default_instance_;
class ProgramDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramDesc>
      _instance;
} _ProgramDesc_default_instance_;
}  // namespace proto
}  // namespace framework
}  // namespace paddle
namespace protobuf_framework_2eproto {
static void InitDefaultsVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_Version_default_instance_;
    new (ptr) ::paddle::framework::proto::Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Version =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersion}, {}};

static void InitDefaultsOpDesc_Attr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_OpDesc_Attr_default_instance_;
    new (ptr) ::paddle::framework::proto::OpDesc_Attr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::OpDesc_Attr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpDesc_Attr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpDesc_Attr}, {}};

static void InitDefaultsOpDesc_Var() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_OpDesc_Var_default_instance_;
    new (ptr) ::paddle::framework::proto::OpDesc_Var();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::OpDesc_Var::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpDesc_Var =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpDesc_Var}, {}};

static void InitDefaultsOpDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_OpDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::OpDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::OpDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OpDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOpDesc}, {
      &protobuf_framework_2eproto::scc_info_OpDesc_Var.base,
      &protobuf_framework_2eproto::scc_info_OpDesc_Attr.base,}};

static void InitDefaultsOpProto_Var() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_OpProto_Var_default_instance_;
    new (ptr) ::paddle::framework::proto::OpProto_Var();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::OpProto_Var::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpProto_Var =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpProto_Var}, {}};

static void InitDefaultsOpProto_Attr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_OpProto_Attr_default_instance_;
    new (ptr) ::paddle::framework::proto::OpProto_Attr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::OpProto_Attr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpProto_Attr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpProto_Attr}, {}};

static void InitDefaultsOpProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_OpProto_default_instance_;
    new (ptr) ::paddle::framework::proto::OpProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::OpProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OpProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOpProto}, {
      &protobuf_framework_2eproto::scc_info_OpProto_Var.base,
      &protobuf_framework_2eproto::scc_info_OpProto_Attr.base,}};

static void InitDefaultsVarType_TensorDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_VarType_TensorDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::VarType_TensorDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::VarType_TensorDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarType_TensorDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarType_TensorDesc}, {}};

static void InitDefaultsVarType_LoDTensorDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_VarType_LoDTensorDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::VarType_LoDTensorDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::VarType_LoDTensorDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VarType_LoDTensorDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVarType_LoDTensorDesc}, {
      &protobuf_framework_2eproto::scc_info_VarType_TensorDesc.base,}};

static void InitDefaultsVarType_LoDTensorArrayDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_VarType_LoDTensorArrayDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::VarType_LoDTensorArrayDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::VarType_LoDTensorArrayDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VarType_LoDTensorArrayDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVarType_LoDTensorArrayDesc}, {
      &protobuf_framework_2eproto::scc_info_VarType_TensorDesc.base,}};

static void InitDefaultsVarType_ReaderDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_VarType_ReaderDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::VarType_ReaderDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::VarType_ReaderDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VarType_ReaderDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVarType_ReaderDesc}, {
      &protobuf_framework_2eproto::scc_info_VarType_LoDTensorDesc.base,}};

static void InitDefaultsVarType_Tuple() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_VarType_Tuple_default_instance_;
    new (ptr) ::paddle::framework::proto::VarType_Tuple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::VarType_Tuple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarType_Tuple =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarType_Tuple}, {}};

static void InitDefaultsVarType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_VarType_default_instance_;
    new (ptr) ::paddle::framework::proto::VarType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::VarType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_VarType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsVarType}, {
      &protobuf_framework_2eproto::scc_info_VarType_TensorDesc.base,
      &protobuf_framework_2eproto::scc_info_VarType_LoDTensorDesc.base,
      &protobuf_framework_2eproto::scc_info_VarType_LoDTensorArrayDesc.base,
      &protobuf_framework_2eproto::scc_info_VarType_ReaderDesc.base,
      &protobuf_framework_2eproto::scc_info_VarType_Tuple.base,}};

static void InitDefaultsVarDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_VarDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::VarDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::VarDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VarDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVarDesc}, {
      &protobuf_framework_2eproto::scc_info_VarType.base,}};

static void InitDefaultsBlockDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_BlockDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::BlockDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::BlockDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BlockDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBlockDesc}, {
      &protobuf_framework_2eproto::scc_info_VarDesc.base,
      &protobuf_framework_2eproto::scc_info_OpDesc.base,}};

static void InitDefaultsProgramDesc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::paddle::framework::proto::_ProgramDesc_default_instance_;
    new (ptr) ::paddle::framework::proto::ProgramDesc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::paddle::framework::proto::ProgramDesc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ProgramDesc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProgramDesc}, {
      &protobuf_framework_2eproto::scc_info_BlockDesc.base,
      &protobuf_framework_2eproto::scc_info_Version.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Version.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpDesc_Attr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpDesc_Var.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpDesc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpProto_Var.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpProto_Attr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarType_TensorDesc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarType_LoDTensorDesc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarType_LoDTensorArrayDesc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarType_ReaderDesc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarType_Tuple.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarDesc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlockDesc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProgramDesc.base);
}

}  // namespace protobuf_framework_2eproto
namespace paddle {
namespace framework {
namespace proto {
bool VarType_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VarType_Type VarType::BOOL;
const VarType_Type VarType::INT16;
const VarType_Type VarType::INT32;
const VarType_Type VarType::INT64;
const VarType_Type VarType::FP16;
const VarType_Type VarType::FP32;
const VarType_Type VarType::FP64;
const VarType_Type VarType::SIZE_T;
const VarType_Type VarType::UINT8;
const VarType_Type VarType::INT8;
const VarType_Type VarType::LOD_TENSOR;
const VarType_Type VarType::SELECTED_ROWS;
const VarType_Type VarType::FEED_MINIBATCH;
const VarType_Type VarType::FETCH_LIST;
const VarType_Type VarType::STEP_SCOPES;
const VarType_Type VarType::LOD_RANK_TABLE;
const VarType_Type VarType::LOD_TENSOR_ARRAY;
const VarType_Type VarType::PLACE_LIST;
const VarType_Type VarType::READER;
const VarType_Type VarType::RAW;
const VarType_Type VarType::TUPLE;
const VarType_Type VarType::Type_MIN;
const VarType_Type VarType::Type_MAX;
const int VarType::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool AttrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Version::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version::Version()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_Version.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.Version)
}
Version::Version(const Version& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.Version)
}

void Version::SharedCtor() {
  version_ = GOOGLE_LONGLONG(0);
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.Version)
  SharedDtor();
}

void Version::SharedDtor() {
}

void Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Version& Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_Version.base);
  return *internal_default_instance();
}


void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 version = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.Version)
  return false;
#undef DO_
}

void Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 version = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.Version)
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.Version)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional int64 version = 1 [default = 0];
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Version*>(&from));
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_version()) {
    set_version(from.version());
  }
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version::IsInitialized() const {
  return true;
}

void Version::Swap(Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version::InternalSwap(Version* other) {
  using std::swap;
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Version::GetTypeName() const {
  return "paddle.framework.proto.Version";
}


// ===================================================================

void OpDesc_Attr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc_Attr::kNameFieldNumber;
const int OpDesc_Attr::kTypeFieldNumber;
const int OpDesc_Attr::kIFieldNumber;
const int OpDesc_Attr::kFFieldNumber;
const int OpDesc_Attr::kSFieldNumber;
const int OpDesc_Attr::kIntsFieldNumber;
const int OpDesc_Attr::kFloatsFieldNumber;
const int OpDesc_Attr::kStringsFieldNumber;
const int OpDesc_Attr::kBFieldNumber;
const int OpDesc_Attr::kBoolsFieldNumber;
const int OpDesc_Attr::kBlockIdxFieldNumber;
const int OpDesc_Attr::kLFieldNumber;
const int OpDesc_Attr::kBlocksIdxFieldNumber;
const int OpDesc_Attr::kLongsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc_Attr::OpDesc_Attr()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_OpDesc_Attr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpDesc.Attr)
}
OpDesc_Attr::OpDesc_Attr(const OpDesc_Attr& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ints_(from.ints_),
      floats_(from.floats_),
      strings_(from.strings_),
      bools_(from.bools_),
      blocks_idx_(from.blocks_idx_),
      longs_(from.longs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_s()) {
    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_idx_) -
    reinterpret_cast<char*>(&type_)) + sizeof(block_idx_));
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpDesc.Attr)
}

void OpDesc_Attr::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_idx_) -
      reinterpret_cast<char*>(&type_)) + sizeof(block_idx_));
}

OpDesc_Attr::~OpDesc_Attr() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpDesc.Attr)
  SharedDtor();
}

void OpDesc_Attr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc_Attr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpDesc_Attr& OpDesc_Attr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_OpDesc_Attr.base);
  return *internal_default_instance();
}


void OpDesc_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpDesc.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ints_.Clear();
  floats_.Clear();
  strings_.Clear();
  bools_.Clear();
  blocks_idx_.Clear();
  longs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      s_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&block_idx_) -
        reinterpret_cast<char*>(&type_)) + sizeof(block_idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpDesc_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpDesc.Attr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .paddle.framework.proto.AttrType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::AttrType_IsValid(value)) {
            set_type(static_cast< ::paddle::framework::proto::AttrType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 i = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float f = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_f();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 ints = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_ints())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float floats = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61u, input, this->mutable_floats())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floats())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strings = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool b = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool bools = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 88u, input, this->mutable_bools())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bools())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 block_idx = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_block_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 l = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 blocks_idx = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 112u, input, this->mutable_blocks_idx())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_blocks_idx())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 longs = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 120u, input, this->mutable_longs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_longs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpDesc.Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpDesc.Attr)
  return false;
#undef DO_
}

void OpDesc_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpDesc.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .paddle.framework.proto.AttrType type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional int32 i = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->i(), output);
  }

  // optional float f = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->f(), output);
  }

  // optional string s = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->s(), output);
  }

  // repeated int32 ints = 6;
  for (int i = 0, n = this->ints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->ints(i), output);
  }

  // repeated float floats = 7;
  for (int i = 0, n = this->floats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->floats(i), output);
  }

  // repeated string strings = 8;
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strings(i), output);
  }

  // optional bool b = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->b(), output);
  }

  // repeated bool bools = 11;
  for (int i = 0, n = this->bools_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      11, this->bools(i), output);
  }

  // optional int32 block_idx = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->block_idx(), output);
  }

  // optional int64 l = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->l(), output);
  }

  // repeated int32 blocks_idx = 14;
  for (int i = 0, n = this->blocks_idx_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      14, this->blocks_idx(i), output);
  }

  // repeated int64 longs = 15;
  for (int i = 0, n = this->longs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      15, this->longs(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpDesc.Attr)
}

size_t OpDesc_Attr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpDesc.Attr)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t OpDesc_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpDesc.Attr)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 ints = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->ints_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ints_size());
    total_size += data_size;
  }

  // repeated float floats = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->floats_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->floats_size());
    total_size += data_size;
  }

  // repeated string strings = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strings_size());
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strings(i));
  }

  // repeated bool bools = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->bools_size());
    size_t data_size = 1UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bools_size());
    total_size += data_size;
  }

  // repeated int32 blocks_idx = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->blocks_idx_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->blocks_idx_size());
    total_size += data_size;
  }

  // repeated int64 longs = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->longs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->longs_size());
    total_size += data_size;
  }

  // optional string s = 5;
  if (has_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s());
  }

  if (_has_bits_[0 / 32] & 248u) {
    // optional int32 i = 3;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i());
    }

    // optional float f = 4;
    if (has_f()) {
      total_size += 1 + 4;
    }

    // optional bool b = 10;
    if (has_b()) {
      total_size += 1 + 1;
    }

    // optional int64 l = 13;
    if (has_l()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->l());
    }

    // optional int32 block_idx = 12;
    if (has_block_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->block_idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpDesc_Attr::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpDesc_Attr*>(&from));
}

void OpDesc_Attr::MergeFrom(const OpDesc_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpDesc.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ints_.MergeFrom(from.ints_);
  floats_.MergeFrom(from.floats_);
  strings_.MergeFrom(from.strings_);
  bools_.MergeFrom(from.bools_);
  blocks_idx_.MergeFrom(from.blocks_idx_);
  longs_.MergeFrom(from.longs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_s();
      s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      i_ = from.i_;
    }
    if (cached_has_bits & 0x00000010u) {
      f_ = from.f_;
    }
    if (cached_has_bits & 0x00000020u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000040u) {
      l_ = from.l_;
    }
    if (cached_has_bits & 0x00000080u) {
      block_idx_ = from.block_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpDesc_Attr::CopyFrom(const OpDesc_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpDesc.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDesc_Attr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void OpDesc_Attr::Swap(OpDesc_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc_Attr::InternalSwap(OpDesc_Attr* other) {
  using std::swap;
  ints_.InternalSwap(&other->ints_);
  floats_.InternalSwap(&other->floats_);
  strings_.InternalSwap(CastToBase(&other->strings_));
  bools_.InternalSwap(&other->bools_);
  blocks_idx_.InternalSwap(&other->blocks_idx_);
  longs_.InternalSwap(&other->longs_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  s_.Swap(&other->s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(i_, other->i_);
  swap(f_, other->f_);
  swap(b_, other->b_);
  swap(l_, other->l_);
  swap(block_idx_, other->block_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OpDesc_Attr::GetTypeName() const {
  return "paddle.framework.proto.OpDesc.Attr";
}


// ===================================================================

void OpDesc_Var::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc_Var::kParameterFieldNumber;
const int OpDesc_Var::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc_Var::OpDesc_Var()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_OpDesc_Var.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpDesc.Var)
}
OpDesc_Var::OpDesc_Var(const OpDesc_Var& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parameter()) {
    parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_);
  }
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpDesc.Var)
}

void OpDesc_Var::SharedCtor() {
  parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpDesc_Var::~OpDesc_Var() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpDesc.Var)
  SharedDtor();
}

void OpDesc_Var::SharedDtor() {
  parameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc_Var::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpDesc_Var& OpDesc_Var::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_OpDesc_Var.base);
  return *internal_default_instance();
}


void OpDesc_Var::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpDesc.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    parameter_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpDesc_Var::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpDesc.Var)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string parameter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string arguments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpDesc.Var)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpDesc.Var)
  return false;
#undef DO_
}

void OpDesc_Var::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpDesc.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string parameter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parameter(), output);
  }

  // repeated string arguments = 2;
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->arguments(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpDesc.Var)
}

size_t OpDesc_Var::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpDesc.Var)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required string parameter = 1;
  if (has_parameter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameter());
  }
  // repeated string arguments = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->arguments_size());
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->arguments(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpDesc_Var::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpDesc_Var*>(&from));
}

void OpDesc_Var::MergeFrom(const OpDesc_Var& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpDesc.Var)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.has_parameter()) {
    set_has_parameter();
    parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_);
  }
}

void OpDesc_Var::CopyFrom(const OpDesc_Var& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpDesc.Var)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDesc_Var::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OpDesc_Var::Swap(OpDesc_Var* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc_Var::InternalSwap(OpDesc_Var* other) {
  using std::swap;
  arguments_.InternalSwap(CastToBase(&other->arguments_));
  parameter_.Swap(&other->parameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OpDesc_Var::GetTypeName() const {
  return "paddle.framework.proto.OpDesc.Var";
}


// ===================================================================

void OpDesc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc::kTypeFieldNumber;
const int OpDesc::kInputsFieldNumber;
const int OpDesc::kOutputsFieldNumber;
const int OpDesc::kAttrsFieldNumber;
const int OpDesc::kIsTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc::OpDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_OpDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpDesc)
}
OpDesc::OpDesc(const OpDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      attrs_(from.attrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  is_target_ = from.is_target_;
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpDesc)
}

void OpDesc::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_target_ = false;
}

OpDesc::~OpDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpDesc)
  SharedDtor();
}

void OpDesc::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpDesc& OpDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_OpDesc.base);
  return *internal_default_instance();
}


void OpDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  attrs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    type_.ClearNonDefaultToEmptyNoArena();
  }
  is_target_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_target = 5 [default = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpDesc)
  return false;
#undef DO_
}

void OpDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->outputs(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required string type = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attrs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->attrs(static_cast<int>(i)),
      output);
  }

  // optional bool is_target = 5 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_target(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpDesc)
}

size_t OpDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required string type = 3;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }
  // repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->attrs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attrs(static_cast<int>(i)));
    }
  }

  // optional bool is_target = 5 [default = false];
  if (has_is_target()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpDesc*>(&from));
}

void OpDesc::MergeFrom(const OpDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  attrs_.MergeFrom(from.attrs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_target_ = from.is_target_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpDesc::CopyFrom(const OpDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attrs())) return false;
  return true;
}

void OpDesc::Swap(OpDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc::InternalSwap(OpDesc* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  CastToBase(&outputs_)->InternalSwap(CastToBase(&other->outputs_));
  CastToBase(&attrs_)->InternalSwap(CastToBase(&other->attrs_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_target_, other->is_target_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OpDesc::GetTypeName() const {
  return "paddle.framework.proto.OpDesc";
}


// ===================================================================

void OpProto_Var::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto_Var::kNameFieldNumber;
const int OpProto_Var::kCommentFieldNumber;
const int OpProto_Var::kDuplicableFieldNumber;
const int OpProto_Var::kIntermediateFieldNumber;
const int OpProto_Var::kDispensableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto_Var::OpProto_Var()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_OpProto_Var.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpProto.Var)
}
OpProto_Var::OpProto_Var(const OpProto_Var& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&duplicable_, &from.duplicable_,
    static_cast<size_t>(reinterpret_cast<char*>(&dispensable_) -
    reinterpret_cast<char*>(&duplicable_)) + sizeof(dispensable_));
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpProto.Var)
}

void OpProto_Var::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duplicable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dispensable_) -
      reinterpret_cast<char*>(&duplicable_)) + sizeof(dispensable_));
}

OpProto_Var::~OpProto_Var() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpProto.Var)
  SharedDtor();
}

void OpProto_Var::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto_Var::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpProto_Var& OpProto_Var::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_OpProto_Var.base);
  return *internal_default_instance();
}


void OpProto_Var::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpProto.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
  }
  ::memset(&duplicable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dispensable_) -
      reinterpret_cast<char*>(&duplicable_)) + sizeof(dispensable_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpProto_Var::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpProto.Var)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string comment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool duplicable = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_duplicable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &duplicable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool intermediate = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_intermediate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &intermediate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dispensable = 5 [default = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_dispensable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dispensable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpProto.Var)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpProto.Var)
  return false;
#undef DO_
}

void OpProto_Var::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpProto.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string comment = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->comment(), output);
  }

  // optional bool duplicable = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->duplicable(), output);
  }

  // optional bool intermediate = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->intermediate(), output);
  }

  // optional bool dispensable = 5 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dispensable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpProto.Var)
}

size_t OpProto_Var::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpProto.Var)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_comment()) {
    // required string comment = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  return total_size;
}
size_t OpProto_Var::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpProto.Var)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string comment = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 28u) {
    // optional bool duplicable = 3 [default = false];
    if (has_duplicable()) {
      total_size += 1 + 1;
    }

    // optional bool intermediate = 4 [default = false];
    if (has_intermediate()) {
      total_size += 1 + 1;
    }

    // optional bool dispensable = 5 [default = false];
    if (has_dispensable()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpProto_Var::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpProto_Var*>(&from));
}

void OpProto_Var::MergeFrom(const OpProto_Var& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpProto.Var)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000004u) {
      duplicable_ = from.duplicable_;
    }
    if (cached_has_bits & 0x00000008u) {
      intermediate_ = from.intermediate_;
    }
    if (cached_has_bits & 0x00000010u) {
      dispensable_ = from.dispensable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpProto_Var::CopyFrom(const OpProto_Var& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpProto.Var)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpProto_Var::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OpProto_Var::Swap(OpProto_Var* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto_Var::InternalSwap(OpProto_Var* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(duplicable_, other->duplicable_);
  swap(intermediate_, other->intermediate_);
  swap(dispensable_, other->dispensable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OpProto_Var::GetTypeName() const {
  return "paddle.framework.proto.OpProto.Var";
}


// ===================================================================

void OpProto_Attr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto_Attr::kNameFieldNumber;
const int OpProto_Attr::kTypeFieldNumber;
const int OpProto_Attr::kCommentFieldNumber;
const int OpProto_Attr::kGeneratedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto_Attr::OpProto_Attr()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_OpProto_Attr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpProto.Attr)
}
OpProto_Attr::OpProto_Attr(const OpProto_Attr& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&generated_) -
    reinterpret_cast<char*>(&type_)) + sizeof(generated_));
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpProto.Attr)
}

void OpProto_Attr::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&generated_) -
      reinterpret_cast<char*>(&type_)) + sizeof(generated_));
}

OpProto_Attr::~OpProto_Attr() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpProto.Attr)
  SharedDtor();
}

void OpProto_Attr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto_Attr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpProto_Attr& OpProto_Attr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_OpProto_Attr.base);
  return *internal_default_instance();
}


void OpProto_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpProto.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&generated_) -
        reinterpret_cast<char*>(&type_)) + sizeof(generated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpProto_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpProto.Attr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .paddle.framework.proto.AttrType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::AttrType_IsValid(value)) {
            set_type(static_cast< ::paddle::framework::proto::AttrType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string comment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool generated = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_generated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpProto.Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpProto.Attr)
  return false;
#undef DO_
}

void OpProto_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpProto.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .paddle.framework.proto.AttrType type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required string comment = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->comment(), output);
  }

  // optional bool generated = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->generated(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpProto.Attr)
}

size_t OpProto_Attr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpProto.Attr)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_comment()) {
    // required string comment = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  if (has_type()) {
    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t OpProto_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpProto.Attr)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string comment = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());

    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool generated = 4 [default = false];
  if (has_generated()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpProto_Attr::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpProto_Attr*>(&from));
}

void OpProto_Attr::MergeFrom(const OpProto_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpProto.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      generated_ = from.generated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpProto_Attr::CopyFrom(const OpProto_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpProto.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpProto_Attr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void OpProto_Attr::Swap(OpProto_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto_Attr::InternalSwap(OpProto_Attr* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(generated_, other->generated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OpProto_Attr::GetTypeName() const {
  return "paddle.framework.proto.OpProto.Attr";
}


// ===================================================================

void OpProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto::kTypeFieldNumber;
const int OpProto::kInputsFieldNumber;
const int OpProto::kOutputsFieldNumber;
const int OpProto::kAttrsFieldNumber;
const int OpProto::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto::OpProto()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_OpProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpProto)
}
OpProto::OpProto(const OpProto& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      attrs_(from.attrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpProto)
}

void OpProto::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpProto::~OpProto() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpProto)
  SharedDtor();
}

void OpProto::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpProto& OpProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_OpProto.base);
  return *internal_default_instance();
}


void OpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  attrs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      comment_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle.framework.proto.OpProto.Var inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle.framework.proto.OpProto.Var outputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string comment = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpProto)
  return false;
#undef DO_
}

void OpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // repeated .paddle.framework.proto.OpProto.Var inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // repeated .paddle.framework.proto.OpProto.Var outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->outputs(static_cast<int>(i)),
      output);
  }

  // repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attrs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->attrs(static_cast<int>(i)),
      output);
  }

  // required string comment = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->comment(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpProto)
}

size_t OpProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpProto)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_comment()) {
    // required string comment = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  return total_size;
}
size_t OpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string comment = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .paddle.framework.proto.OpProto.Var inputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle.framework.proto.OpProto.Var outputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->attrs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attrs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpProto*>(&from));
}

void OpProto::MergeFrom(const OpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  attrs_.MergeFrom(from.attrs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
  }
}

void OpProto::CopyFrom(const OpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attrs())) return false;
  return true;
}

void OpProto::Swap(OpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto::InternalSwap(OpProto* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  CastToBase(&outputs_)->InternalSwap(CastToBase(&other->outputs_));
  CastToBase(&attrs_)->InternalSwap(CastToBase(&other->attrs_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OpProto::GetTypeName() const {
  return "paddle.framework.proto.OpProto";
}


// ===================================================================

void VarType_TensorDesc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_TensorDesc::kDataTypeFieldNumber;
const int VarType_TensorDesc::kDimsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_TensorDesc::VarType_TensorDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_VarType_TensorDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.TensorDesc)
}
VarType_TensorDesc::VarType_TensorDesc(const VarType_TensorDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dims_(from.dims_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_type_ = from.data_type_;
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.TensorDesc)
}

void VarType_TensorDesc::SharedCtor() {
  data_type_ = 0;
}

VarType_TensorDesc::~VarType_TensorDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.TensorDesc)
  SharedDtor();
}

void VarType_TensorDesc::SharedDtor() {
}

void VarType_TensorDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarType_TensorDesc& VarType_TensorDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_VarType_TensorDesc.base);
  return *internal_default_instance();
}


void VarType_TensorDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.TensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dims_.Clear();
  data_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_TensorDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.TensorDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.Type data_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::VarType_Type_IsValid(value)) {
            set_data_type(static_cast< ::paddle::framework::proto::VarType_Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 dims = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.TensorDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.TensorDesc)
  return false;
#undef DO_
}

void VarType_TensorDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.TensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle.framework.proto.VarType.Type data_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->data_type(), output);
  }

  // repeated int64 dims = 2;
  for (int i = 0, n = this->dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->dims(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.TensorDesc)
}

size_t VarType_TensorDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.TensorDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle.framework.proto.VarType.Type data_type = 1;
  if (has_data_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
  }
  // repeated int64 dims = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dims_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarType_TensorDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_TensorDesc*>(&from));
}

void VarType_TensorDesc::MergeFrom(const VarType_TensorDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.TensorDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dims_.MergeFrom(from.dims_);
  if (from.has_data_type()) {
    set_data_type(from.data_type());
  }
}

void VarType_TensorDesc::CopyFrom(const VarType_TensorDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.TensorDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_TensorDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VarType_TensorDesc::Swap(VarType_TensorDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_TensorDesc::InternalSwap(VarType_TensorDesc* other) {
  using std::swap;
  dims_.InternalSwap(&other->dims_);
  swap(data_type_, other->data_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string VarType_TensorDesc::GetTypeName() const {
  return "paddle.framework.proto.VarType.TensorDesc";
}


// ===================================================================

void VarType_LoDTensorDesc::InitAsDefaultInstance() {
  ::paddle::framework::proto::_VarType_LoDTensorDesc_default_instance_._instance.get_mutable()->tensor_ = const_cast< ::paddle::framework::proto::VarType_TensorDesc*>(
      ::paddle::framework::proto::VarType_TensorDesc::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_LoDTensorDesc::kTensorFieldNumber;
const int VarType_LoDTensorDesc::kLodLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_LoDTensorDesc::VarType_LoDTensorDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_VarType_LoDTensorDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.LoDTensorDesc)
}
VarType_LoDTensorDesc::VarType_LoDTensorDesc(const VarType_LoDTensorDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tensor()) {
    tensor_ = new ::paddle::framework::proto::VarType_TensorDesc(*from.tensor_);
  } else {
    tensor_ = NULL;
  }
  lod_level_ = from.lod_level_;
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.LoDTensorDesc)
}

void VarType_LoDTensorDesc::SharedCtor() {
  ::memset(&tensor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lod_level_) -
      reinterpret_cast<char*>(&tensor_)) + sizeof(lod_level_));
}

VarType_LoDTensorDesc::~VarType_LoDTensorDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.LoDTensorDesc)
  SharedDtor();
}

void VarType_LoDTensorDesc::SharedDtor() {
  if (this != internal_default_instance()) delete tensor_;
}

void VarType_LoDTensorDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarType_LoDTensorDesc& VarType_LoDTensorDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_VarType_LoDTensorDesc.base);
  return *internal_default_instance();
}


void VarType_LoDTensorDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.LoDTensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(tensor_ != NULL);
    tensor_->Clear();
  }
  lod_level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_LoDTensorDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.LoDTensorDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lod_level = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lod_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lod_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.LoDTensorDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.LoDTensorDesc)
  return false;
#undef DO_
}

void VarType_LoDTensorDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.LoDTensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_tensor(), output);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lod_level(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.LoDTensorDesc)
}

size_t VarType_LoDTensorDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.LoDTensorDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tensor_);
  }
  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lod_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarType_LoDTensorDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_LoDTensorDesc*>(&from));
}

void VarType_LoDTensorDesc::MergeFrom(const VarType_LoDTensorDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.LoDTensorDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tensor()->::paddle::framework::proto::VarType_TensorDesc::MergeFrom(from.tensor());
    }
    if (cached_has_bits & 0x00000002u) {
      lod_level_ = from.lod_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarType_LoDTensorDesc::CopyFrom(const VarType_LoDTensorDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.LoDTensorDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_LoDTensorDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_tensor()) {
    if (!this->tensor_->IsInitialized()) return false;
  }
  return true;
}

void VarType_LoDTensorDesc::Swap(VarType_LoDTensorDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_LoDTensorDesc::InternalSwap(VarType_LoDTensorDesc* other) {
  using std::swap;
  swap(tensor_, other->tensor_);
  swap(lod_level_, other->lod_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string VarType_LoDTensorDesc::GetTypeName() const {
  return "paddle.framework.proto.VarType.LoDTensorDesc";
}


// ===================================================================

void VarType_LoDTensorArrayDesc::InitAsDefaultInstance() {
  ::paddle::framework::proto::_VarType_LoDTensorArrayDesc_default_instance_._instance.get_mutable()->tensor_ = const_cast< ::paddle::framework::proto::VarType_TensorDesc*>(
      ::paddle::framework::proto::VarType_TensorDesc::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_LoDTensorArrayDesc::kTensorFieldNumber;
const int VarType_LoDTensorArrayDesc::kLodLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_LoDTensorArrayDesc::VarType_LoDTensorArrayDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_VarType_LoDTensorArrayDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.LoDTensorArrayDesc)
}
VarType_LoDTensorArrayDesc::VarType_LoDTensorArrayDesc(const VarType_LoDTensorArrayDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tensor()) {
    tensor_ = new ::paddle::framework::proto::VarType_TensorDesc(*from.tensor_);
  } else {
    tensor_ = NULL;
  }
  lod_level_ = from.lod_level_;
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.LoDTensorArrayDesc)
}

void VarType_LoDTensorArrayDesc::SharedCtor() {
  ::memset(&tensor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lod_level_) -
      reinterpret_cast<char*>(&tensor_)) + sizeof(lod_level_));
}

VarType_LoDTensorArrayDesc::~VarType_LoDTensorArrayDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  SharedDtor();
}

void VarType_LoDTensorArrayDesc::SharedDtor() {
  if (this != internal_default_instance()) delete tensor_;
}

void VarType_LoDTensorArrayDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarType_LoDTensorArrayDesc& VarType_LoDTensorArrayDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_VarType_LoDTensorArrayDesc.base);
  return *internal_default_instance();
}


void VarType_LoDTensorArrayDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(tensor_ != NULL);
    tensor_->Clear();
  }
  lod_level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_LoDTensorArrayDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lod_level = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lod_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lod_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  return false;
#undef DO_
}

void VarType_LoDTensorArrayDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_tensor(), output);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lod_level(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.LoDTensorArrayDesc)
}

size_t VarType_LoDTensorArrayDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tensor_);
  }
  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lod_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarType_LoDTensorArrayDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_LoDTensorArrayDesc*>(&from));
}

void VarType_LoDTensorArrayDesc::MergeFrom(const VarType_LoDTensorArrayDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tensor()->::paddle::framework::proto::VarType_TensorDesc::MergeFrom(from.tensor());
    }
    if (cached_has_bits & 0x00000002u) {
      lod_level_ = from.lod_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarType_LoDTensorArrayDesc::CopyFrom(const VarType_LoDTensorArrayDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_LoDTensorArrayDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_tensor()) {
    if (!this->tensor_->IsInitialized()) return false;
  }
  return true;
}

void VarType_LoDTensorArrayDesc::Swap(VarType_LoDTensorArrayDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_LoDTensorArrayDesc::InternalSwap(VarType_LoDTensorArrayDesc* other) {
  using std::swap;
  swap(tensor_, other->tensor_);
  swap(lod_level_, other->lod_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string VarType_LoDTensorArrayDesc::GetTypeName() const {
  return "paddle.framework.proto.VarType.LoDTensorArrayDesc";
}


// ===================================================================

void VarType_ReaderDesc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_ReaderDesc::kLodTensorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_ReaderDesc::VarType_ReaderDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_VarType_ReaderDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.ReaderDesc)
}
VarType_ReaderDesc::VarType_ReaderDesc(const VarType_ReaderDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lod_tensor_(from.lod_tensor_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.ReaderDesc)
}

void VarType_ReaderDesc::SharedCtor() {
}

VarType_ReaderDesc::~VarType_ReaderDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.ReaderDesc)
  SharedDtor();
}

void VarType_ReaderDesc::SharedDtor() {
}

void VarType_ReaderDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarType_ReaderDesc& VarType_ReaderDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_VarType_ReaderDesc.base);
  return *internal_default_instance();
}


void VarType_ReaderDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.ReaderDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lod_tensor_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_ReaderDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.ReaderDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lod_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.ReaderDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.ReaderDesc)
  return false;
#undef DO_
}

void VarType_ReaderDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.ReaderDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lod_tensor_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->lod_tensor(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.ReaderDesc)
}

size_t VarType_ReaderDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.ReaderDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lod_tensor_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lod_tensor(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarType_ReaderDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_ReaderDesc*>(&from));
}

void VarType_ReaderDesc::MergeFrom(const VarType_ReaderDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.ReaderDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lod_tensor_.MergeFrom(from.lod_tensor_);
}

void VarType_ReaderDesc::CopyFrom(const VarType_ReaderDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.ReaderDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_ReaderDesc::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->lod_tensor())) return false;
  return true;
}

void VarType_ReaderDesc::Swap(VarType_ReaderDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_ReaderDesc::InternalSwap(VarType_ReaderDesc* other) {
  using std::swap;
  CastToBase(&lod_tensor_)->InternalSwap(CastToBase(&other->lod_tensor_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string VarType_ReaderDesc::GetTypeName() const {
  return "paddle.framework.proto.VarType.ReaderDesc";
}


// ===================================================================

void VarType_Tuple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_Tuple::kElementTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_Tuple::VarType_Tuple()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_VarType_Tuple.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.Tuple)
}
VarType_Tuple::VarType_Tuple(const VarType_Tuple& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      element_type_(from.element_type_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.Tuple)
}

void VarType_Tuple::SharedCtor() {
}

VarType_Tuple::~VarType_Tuple() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.Tuple)
  SharedDtor();
}

void VarType_Tuple::SharedDtor() {
}

void VarType_Tuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarType_Tuple& VarType_Tuple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_VarType_Tuple.base);
  return *internal_default_instance();
}


void VarType_Tuple::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_type_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.Tuple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.VarType.Type element_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::VarType_Type_IsValid(value)) {
            add_element_type(static_cast< ::paddle::framework::proto::VarType_Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::paddle::framework::proto::VarType_Type_IsValid,
                 &unknown_fields_stream,
                 this->mutable_element_type())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.Tuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.Tuple)
  return false;
#undef DO_
}

void VarType_Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paddle.framework.proto.VarType.Type element_type = 1;
  for (int i = 0, n = this->element_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->element_type(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.Tuple)
}

size_t VarType_Tuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.Tuple)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .paddle.framework.proto.VarType.Type element_type = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->element_type_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->element_type(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarType_Tuple::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_Tuple*>(&from));
}

void VarType_Tuple::MergeFrom(const VarType_Tuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_type_.MergeFrom(from.element_type_);
}

void VarType_Tuple::CopyFrom(const VarType_Tuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_Tuple::IsInitialized() const {
  return true;
}

void VarType_Tuple::Swap(VarType_Tuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_Tuple::InternalSwap(VarType_Tuple* other) {
  using std::swap;
  element_type_.InternalSwap(&other->element_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string VarType_Tuple::GetTypeName() const {
  return "paddle.framework.proto.VarType.Tuple";
}


// ===================================================================

void VarType::InitAsDefaultInstance() {
  ::paddle::framework::proto::_VarType_default_instance_._instance.get_mutable()->selected_rows_ = const_cast< ::paddle::framework::proto::VarType_TensorDesc*>(
      ::paddle::framework::proto::VarType_TensorDesc::internal_default_instance());
  ::paddle::framework::proto::_VarType_default_instance_._instance.get_mutable()->lod_tensor_ = const_cast< ::paddle::framework::proto::VarType_LoDTensorDesc*>(
      ::paddle::framework::proto::VarType_LoDTensorDesc::internal_default_instance());
  ::paddle::framework::proto::_VarType_default_instance_._instance.get_mutable()->tensor_array_ = const_cast< ::paddle::framework::proto::VarType_LoDTensorArrayDesc*>(
      ::paddle::framework::proto::VarType_LoDTensorArrayDesc::internal_default_instance());
  ::paddle::framework::proto::_VarType_default_instance_._instance.get_mutable()->reader_ = const_cast< ::paddle::framework::proto::VarType_ReaderDesc*>(
      ::paddle::framework::proto::VarType_ReaderDesc::internal_default_instance());
  ::paddle::framework::proto::_VarType_default_instance_._instance.get_mutable()->tuple_ = const_cast< ::paddle::framework::proto::VarType_Tuple*>(
      ::paddle::framework::proto::VarType_Tuple::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType::kTypeFieldNumber;
const int VarType::kSelectedRowsFieldNumber;
const int VarType::kLodTensorFieldNumber;
const int VarType::kTensorArrayFieldNumber;
const int VarType::kReaderFieldNumber;
const int VarType::kTupleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType::VarType()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_VarType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType)
}
VarType::VarType(const VarType& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_selected_rows()) {
    selected_rows_ = new ::paddle::framework::proto::VarType_TensorDesc(*from.selected_rows_);
  } else {
    selected_rows_ = NULL;
  }
  if (from.has_lod_tensor()) {
    lod_tensor_ = new ::paddle::framework::proto::VarType_LoDTensorDesc(*from.lod_tensor_);
  } else {
    lod_tensor_ = NULL;
  }
  if (from.has_tensor_array()) {
    tensor_array_ = new ::paddle::framework::proto::VarType_LoDTensorArrayDesc(*from.tensor_array_);
  } else {
    tensor_array_ = NULL;
  }
  if (from.has_reader()) {
    reader_ = new ::paddle::framework::proto::VarType_ReaderDesc(*from.reader_);
  } else {
    reader_ = NULL;
  }
  if (from.has_tuple()) {
    tuple_ = new ::paddle::framework::proto::VarType_Tuple(*from.tuple_);
  } else {
    tuple_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType)
}

void VarType::SharedCtor() {
  ::memset(&selected_rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&selected_rows_)) + sizeof(type_));
}

VarType::~VarType() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType)
  SharedDtor();
}

void VarType::SharedDtor() {
  if (this != internal_default_instance()) delete selected_rows_;
  if (this != internal_default_instance()) delete lod_tensor_;
  if (this != internal_default_instance()) delete tensor_array_;
  if (this != internal_default_instance()) delete reader_;
  if (this != internal_default_instance()) delete tuple_;
}

void VarType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarType& VarType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_VarType.base);
  return *internal_default_instance();
}


void VarType::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(selected_rows_ != NULL);
      selected_rows_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(lod_tensor_ != NULL);
      lod_tensor_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(tensor_array_ != NULL);
      tensor_array_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(reader_ != NULL);
      reader_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(tuple_ != NULL);
      tuple_->Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::VarType_Type_IsValid(value)) {
            set_type(static_cast< ::paddle::framework::proto::VarType_Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selected_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lod_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tensor_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle.framework.proto.VarType.Tuple tuple = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType)
  return false;
#undef DO_
}

void VarType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle.framework.proto.VarType.Type type = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_selected_rows(), output);
  }

  // optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_lod_tensor(), output);
  }

  // optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_tensor_array(), output);
  }

  // optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_reader(), output);
  }

  // optional .paddle.framework.proto.VarType.Tuple tuple = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_tuple(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType)
}

size_t VarType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle.framework.proto.VarType.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
    if (has_selected_rows()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *selected_rows_);
    }

    // optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
    if (has_lod_tensor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *lod_tensor_);
    }

    // optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
    if (has_tensor_array()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tensor_array_);
    }

    // optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
    if (has_reader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reader_);
    }

    // optional .paddle.framework.proto.VarType.Tuple tuple = 7;
    if (has_tuple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tuple_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarType::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType*>(&from));
}

void VarType::MergeFrom(const VarType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_selected_rows()->::paddle::framework::proto::VarType_TensorDesc::MergeFrom(from.selected_rows());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_lod_tensor()->::paddle::framework::proto::VarType_LoDTensorDesc::MergeFrom(from.lod_tensor());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_tensor_array()->::paddle::framework::proto::VarType_LoDTensorArrayDesc::MergeFrom(from.tensor_array());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_reader()->::paddle::framework::proto::VarType_ReaderDesc::MergeFrom(from.reader());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_tuple()->::paddle::framework::proto::VarType_Tuple::MergeFrom(from.tuple());
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarType::CopyFrom(const VarType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  if (has_selected_rows()) {
    if (!this->selected_rows_->IsInitialized()) return false;
  }
  if (has_lod_tensor()) {
    if (!this->lod_tensor_->IsInitialized()) return false;
  }
  if (has_tensor_array()) {
    if (!this->tensor_array_->IsInitialized()) return false;
  }
  if (has_reader()) {
    if (!this->reader_->IsInitialized()) return false;
  }
  return true;
}

void VarType::Swap(VarType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType::InternalSwap(VarType* other) {
  using std::swap;
  swap(selected_rows_, other->selected_rows_);
  swap(lod_tensor_, other->lod_tensor_);
  swap(tensor_array_, other->tensor_array_);
  swap(reader_, other->reader_);
  swap(tuple_, other->tuple_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string VarType::GetTypeName() const {
  return "paddle.framework.proto.VarType";
}


// ===================================================================

void VarDesc::InitAsDefaultInstance() {
  ::paddle::framework::proto::_VarDesc_default_instance_._instance.get_mutable()->type_ = const_cast< ::paddle::framework::proto::VarType*>(
      ::paddle::framework::proto::VarType::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarDesc::kNameFieldNumber;
const int VarDesc::kTypeFieldNumber;
const int VarDesc::kPersistableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarDesc::VarDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_VarDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarDesc)
}
VarDesc::VarDesc(const VarDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::paddle::framework::proto::VarType(*from.type_);
  } else {
    type_ = NULL;
  }
  persistable_ = from.persistable_;
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarDesc)
}

void VarDesc::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&persistable_) -
      reinterpret_cast<char*>(&type_)) + sizeof(persistable_));
}

VarDesc::~VarDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarDesc)
  SharedDtor();
}

void VarDesc::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void VarDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VarDesc& VarDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_VarDesc.base);
  return *internal_default_instance();
}


void VarDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
  }
  persistable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .paddle.framework.proto.VarType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool persistable = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_persistable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persistable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarDesc)
  return false;
#undef DO_
}

void VarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .paddle.framework.proto.VarType type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_type(), output);
  }

  // optional bool persistable = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->persistable(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarDesc)
}

size_t VarDesc::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.VarDesc)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .paddle.framework.proto.VarType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  return total_size;
}
size_t VarDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .paddle.framework.proto.VarType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool persistable = 3 [default = false];
  if (has_persistable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarDesc*>(&from));
}

void VarDesc::MergeFrom(const VarDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_type()->::paddle::framework::proto::VarType::MergeFrom(from.type());
    }
    if (cached_has_bits & 0x00000004u) {
      persistable_ = from.persistable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarDesc::CopyFrom(const VarDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void VarDesc::Swap(VarDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarDesc::InternalSwap(VarDesc* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(persistable_, other->persistable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string VarDesc::GetTypeName() const {
  return "paddle.framework.proto.VarDesc";
}


// ===================================================================

void BlockDesc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockDesc::kIdxFieldNumber;
const int BlockDesc::kParentIdxFieldNumber;
const int BlockDesc::kVarsFieldNumber;
const int BlockDesc::kOpsFieldNumber;
const int BlockDesc::kForwardBlockIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockDesc::BlockDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_BlockDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.BlockDesc)
}
BlockDesc::BlockDesc(const BlockDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      vars_(from.vars_),
      ops_(from.ops_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&idx_, &from.idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&forward_block_idx_) -
    reinterpret_cast<char*>(&idx_)) + sizeof(forward_block_idx_));
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.BlockDesc)
}

void BlockDesc::SharedCtor() {
  ::memset(&idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_idx_) -
      reinterpret_cast<char*>(&idx_)) + sizeof(parent_idx_));
  forward_block_idx_ = -1;
}

BlockDesc::~BlockDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.BlockDesc)
  SharedDtor();
}

void BlockDesc::SharedDtor() {
}

void BlockDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BlockDesc& BlockDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_BlockDesc.base);
  return *internal_default_instance();
}


void BlockDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.BlockDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vars_.Clear();
  ops_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&parent_idx_) -
        reinterpret_cast<char*>(&idx_)) + sizeof(parent_idx_));
    forward_block_idx_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlockDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.BlockDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 parent_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_parent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle.framework.proto.VarDesc vars = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle.framework.proto.OpDesc ops = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 forward_block_idx = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_forward_block_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &forward_block_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.BlockDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.BlockDesc)
  return false;
#undef DO_
}

void BlockDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.BlockDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 idx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idx(), output);
  }

  // required int32 parent_idx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parent_idx(), output);
  }

  // repeated .paddle.framework.proto.VarDesc vars = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->vars(static_cast<int>(i)),
      output);
  }

  // repeated .paddle.framework.proto.OpDesc ops = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->ops(static_cast<int>(i)),
      output);
  }

  // optional int32 forward_block_idx = 5 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->forward_block_idx(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.BlockDesc)
}

size_t BlockDesc::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.BlockDesc)
  size_t total_size = 0;

  if (has_idx()) {
    // required int32 idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());
  }

  if (has_parent_idx()) {
    // required int32 parent_idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_idx());
  }

  return total_size;
}
size_t BlockDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.BlockDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());

    // required int32 parent_idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_idx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .paddle.framework.proto.VarDesc vars = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->vars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vars(static_cast<int>(i)));
    }
  }

  // repeated .paddle.framework.proto.OpDesc ops = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->ops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ops(static_cast<int>(i)));
    }
  }

  // optional int32 forward_block_idx = 5 [default = -1];
  if (has_forward_block_idx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->forward_block_idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BlockDesc*>(&from));
}

void BlockDesc::MergeFrom(const BlockDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.BlockDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vars_.MergeFrom(from.vars_);
  ops_.MergeFrom(from.ops_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      idx_ = from.idx_;
    }
    if (cached_has_bits & 0x00000002u) {
      parent_idx_ = from.parent_idx_;
    }
    if (cached_has_bits & 0x00000004u) {
      forward_block_idx_ = from.forward_block_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlockDesc::CopyFrom(const BlockDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.BlockDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vars())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ops())) return false;
  return true;
}

void BlockDesc::Swap(BlockDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockDesc::InternalSwap(BlockDesc* other) {
  using std::swap;
  CastToBase(&vars_)->InternalSwap(CastToBase(&other->vars_));
  CastToBase(&ops_)->InternalSwap(CastToBase(&other->ops_));
  swap(idx_, other->idx_);
  swap(parent_idx_, other->parent_idx_);
  swap(forward_block_idx_, other->forward_block_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BlockDesc::GetTypeName() const {
  return "paddle.framework.proto.BlockDesc";
}


// ===================================================================

void ProgramDesc::InitAsDefaultInstance() {
  ::paddle::framework::proto::_ProgramDesc_default_instance_._instance.get_mutable()->version_ = const_cast< ::paddle::framework::proto::Version*>(
      ::paddle::framework::proto::Version::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramDesc::kBlocksFieldNumber;
const int ProgramDesc::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramDesc::ProgramDesc()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_framework_2eproto::scc_info_ProgramDesc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.ProgramDesc)
}
ProgramDesc::ProgramDesc(const ProgramDesc& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      blocks_(from.blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    version_ = new ::paddle::framework::proto::Version(*from.version_);
  } else {
    version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.ProgramDesc)
}

void ProgramDesc::SharedCtor() {
  version_ = NULL;
}

ProgramDesc::~ProgramDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.ProgramDesc)
  SharedDtor();
}

void ProgramDesc::SharedDtor() {
  if (this != internal_default_instance()) delete version_;
}

void ProgramDesc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProgramDesc& ProgramDesc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_framework_2eproto::scc_info_ProgramDesc.base);
  return *internal_default_instance();
}


void ProgramDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.ProgramDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(version_ != NULL);
    version_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProgramDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.ProgramDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.BlockDesc blocks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle.framework.proto.Version version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.ProgramDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.ProgramDesc)
  return false;
#undef DO_
}

void ProgramDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.ProgramDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .paddle.framework.proto.BlockDesc blocks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->blocks(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .paddle.framework.proto.Version version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_version(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.ProgramDesc)
}

size_t ProgramDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.ProgramDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .paddle.framework.proto.BlockDesc blocks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->blocks(static_cast<int>(i)));
    }
  }

  // optional .paddle.framework.proto.Version version = 2;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProgramDesc*>(&from));
}

void ProgramDesc::MergeFrom(const ProgramDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.ProgramDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
  if (from.has_version()) {
    mutable_version()->::paddle::framework::proto::Version::MergeFrom(from.version());
  }
}

void ProgramDesc::CopyFrom(const ProgramDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.ProgramDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramDesc::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->blocks())) return false;
  return true;
}

void ProgramDesc::Swap(ProgramDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramDesc::InternalSwap(ProgramDesc* other) {
  using std::swap;
  CastToBase(&blocks_)->InternalSwap(CastToBase(&other->blocks_));
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ProgramDesc::GetTypeName() const {
  return "paddle.framework.proto.ProgramDesc";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace framework
}  // namespace paddle
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::Version* Arena::CreateMaybeMessage< ::paddle::framework::proto::Version >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::Version >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::OpDesc_Attr* Arena::CreateMaybeMessage< ::paddle::framework::proto::OpDesc_Attr >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::OpDesc_Attr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::OpDesc_Var* Arena::CreateMaybeMessage< ::paddle::framework::proto::OpDesc_Var >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::OpDesc_Var >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::OpDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::OpDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::OpDesc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::OpProto_Var* Arena::CreateMaybeMessage< ::paddle::framework::proto::OpProto_Var >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::OpProto_Var >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::OpProto_Attr* Arena::CreateMaybeMessage< ::paddle::framework::proto::OpProto_Attr >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::OpProto_Attr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::OpProto* Arena::CreateMaybeMessage< ::paddle::framework::proto::OpProto >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::OpProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::VarType_TensorDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::VarType_TensorDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::VarType_TensorDesc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::VarType_LoDTensorDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::VarType_LoDTensorDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::VarType_LoDTensorDesc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::VarType_LoDTensorArrayDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::VarType_LoDTensorArrayDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::VarType_LoDTensorArrayDesc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::VarType_ReaderDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::VarType_ReaderDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::VarType_ReaderDesc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::VarType_Tuple* Arena::CreateMaybeMessage< ::paddle::framework::proto::VarType_Tuple >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::VarType_Tuple >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::VarType* Arena::CreateMaybeMessage< ::paddle::framework::proto::VarType >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::VarType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::VarDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::VarDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::VarDesc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::BlockDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::BlockDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::BlockDesc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::paddle::framework::proto::ProgramDesc* Arena::CreateMaybeMessage< ::paddle::framework::proto::ProgramDesc >(Arena* arena) {
  return Arena::CreateInternal< ::paddle::framework::proto::ProgramDesc >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
